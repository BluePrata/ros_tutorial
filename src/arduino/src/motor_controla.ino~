#if (ARDUINO >=100)
  #include <Arduino.h>
#else
  #include <WProgram.h>
#endif

#include <ros.h>
#include <ros/time.h>
#include <std_msgs/UInt16.h>
#include <std_msgs/String.h>

ros::NodeHandle nh;

#include <AccelStepper.h>

#define stp 22
#define dir 23
#define MS1 19
#define MS2 20
#define MS3 21
#define EN 18

int x;
//AccelStepper stepper_pulley(4,22,23,19,20);

void StepForwardDefault()
{
  digitalWrite(dir, LOW); 
  for(x= 1; x<400; x++) 
  {
    digitalWrite(stp,HIGH); 
    delay(1);
    digitalWrite(stp,LOW); 
    delay(1);
  }

}

void ReverseStepDefault()
{
  digitalWrite(dir, HIGH); 
  for(x= 1; x<400; x++)  
  {
    digitalWrite(stp,HIGH); 
    delay(1);
    digitalWrite(stp,LOW); 
    delay(1);
  }
}

void MotorCb( const std_msgs::UInt16& motor_msg)
{
        int state = motor_msg.data;
        if (state == 1) {
                StepForwardDefault();
        }
        if (state == 2) {
                ReverseStepDefault();
        }
}

ros::Subscriber<std_msgs::UInt16> motorSub("PulleyMotor", MotorCb);

void setup() {
  nh.initNode();
	
  pinMode(stp, OUTPUT);
  pinMode(dir, OUTPUT);
  pinMode(MS1, OUTPUT);
  pinMode(MS2, OUTPUT);
  pinMode(MS3, OUTPUT);
  pinMode(EN, OUTPUT);

  digitalWrite(stp, LOW);
  digitalWrite(dir, LOW);
  digitalWrite(MS1, LOW);
  digitalWrite(MS2, LOW);
  digitalWrite(MS3, LOW);
  digitalWrite(EN, HIGH);
	
  nh.subscribe(motorSub);
  digitalWrite(EN, LOW);	
  ReverseStepDefault();  

}

void loop() 
{	
	digitalWrite(EN, LOW);	
	  
	ReverseStepDefault();
	delay(2000);
	StepForwardDefault();
	delay(2000);

	nh.spinOnce();
	delay(1);
}


